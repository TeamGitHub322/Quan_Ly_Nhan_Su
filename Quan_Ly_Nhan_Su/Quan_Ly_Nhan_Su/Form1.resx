<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btHelp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABYAFoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACiiuL+Mv7RvgP9njSUvfHHi7w/4XhmBMK6hepFLc46iKMnfIfZFJ9qipUhCPPNpLu9EdODweIx
        daOHwsJTnLaMU5N+iV2ztKK+KfiB/wAF8vgL4PuTHpY8ceLlBx5ulaJ5Kf8Ak48B/SuGuf8Ag43+GcU3
        yfDv4lNDn7zR2Kt+QuD/ADrxqnEuVwdnXj8tfyufpmD8D+PMTBVKeV1Un/MlB/dNxf4H6H0V8J+Bf+Dh
        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
</value>
  </data>
</root>